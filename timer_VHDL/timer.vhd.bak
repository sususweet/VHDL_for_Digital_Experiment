-- WARNING: Do NOT edit the input and output ports in this file in a text
-- editor if you plan to continue editing the block that represents it in
-- the Block Editor! File corruption is VERY likely to occur.

-- Copyright (C) 1991-2009 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.


-- Generated by Quartus II Version 9.1 (Build Build 222 10/21/2009)
-- Created on Tue May 16 15:16:14 2017

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;

--  Entity Declaration

ENTITY timer IS
	-- {{ALTERA_IO_BEGIN}} DO NOT REMOVE THIS LINE!
	PORT
	(
		CLK : IN STD_LOGIC;
		SEC0 : BUFFER STD_LOGIC_VECTOR(3 downto 0);
		SEC1 : BUFFER STD_LOGIC_VECTOR(3 downto 0);
		MIN0 : BUFFER STD_LOGIC_VECTOR(3 downto 0);
		MIN1 : BUFFER STD_LOGIC_VECTOR(3 downto 0);
		HOUR0 : BUFFER STD_LOGIC_VECTOR(3 downto 0);
		HOUR1 : BUFFER STD_LOGIC_VECTOR(3 downto 0)
	);
	-- {{ALTERA_IO_END}} DO NOT REMOVE THIS LINE!
	
END timer;


--  Architecture Body

ARCHITECTURE timer_architecture OF timer IS

BEGIN
	--Second--
	PROCESS(CLK)
	BEGIN
		IF(RISING_EDGE(CLK)) THEN
		  IF(SEC0="1001") THEN
			SEC0<="0000";
		  ELSE
			SEC0<=SEC0+1;
		  END IF;
		END IF;
	END PROCESS;
	
	PROCESS(CLK)
	BEGIN
		IF(RISING_EDGE(CLK)) THEN
		  IF(SEC0="1001") THEN
			IF(SEC1="0101") THEN
			  SEC1<="0000";
			ELSE
			  SEC1<=SEC1+1;
			END IF;
		  END IF;
		END IF;
	END PROCESS;
	--Second end--

	--Minute--
	PROCESS(CLK)
	BEGIN
		IF(RISING_EDGE(CLK)) THEN
		  IF(SEC0="1001" AND SEC1="0101") THEN
			IF(MIN0="1001") THEN
				MIN0<="0000";
			ELSE
				MIN0<=MIN0+1;
			END IF;
		  END IF;
		END IF;
	END PROCESS;
	
	PROCESS(CLK)
	BEGIN
		IF(RISING_EDGE(CLK)) THEN
		  IF(SEC0="1001" AND SEC1="0101" AND MIN0="1001") THEN
			IF(MIN1="0101") THEN
				MIN1<="0000";
			ELSE
				MIN1<=MIN1+1;
			END IF;
		  END IF;
		END IF;
	END PROCESS;
	--Minute End--
	
	--Hour--
	PROCESS(CLK)
	BEGIN
		IF(RISING_EDGE(CLK)) THEN
		  IF(SEC0="1001" AND SEC1="0101" AND MIN0="1001" AND MIN1="0101") THEN
			IF(HOUR0="1001" OR (HOUR0="0011" AND HOUR1="0010")) THEN
				HOUR0<="0000";
			ELSE
				HOUR0<=HOUR0+1;
			END IF;
		  END IF;
		END IF;
	END PROCESS;
	
	PROCESS(CLK)
	BEGIN
		IF(RISING_EDGE(CLK)) THEN
			IF(SEC0="1001" AND SEC1="0101" AND MIN0="1001" AND MIN1="0101") THEN
				IF(HOUR1="0010" AND HOUR0="0011") THEN
					HOUR1<="0000";
				ELSIF (HOUR0="1001") THEN
					HOUR1<="0000";
				ELSE
					HOUR1<=HOUR1+1;
				END IF;
			END IF;
		END IF;
	END PROCESS;
	--Hour End--
END timer_architecture;
